{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww18560\viewh13080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs28 \cf0 Disaster recovery for elasticsearch.\
\
There are three items needed in order to build elasticsearch cluster from scratch.\
\
	1 - Elasticsearch image. (we have a custom image for ES)\
	2 - Mongo server. (master or replica does not matter as long as they have all the data)\
	3 - Python indexing scripts.\
\
Dependency:\
	mongodb server (should already exist)\
\
Use elasticsearch image to deploy your data nodes and master nodes. (size should be m4x4)\
create directory in all the servers:\
\
# mkdir -p /var/lib/elasticsearch/data/indexing\
\
 directory /var/lib/elasticsearch/data should already exist.\
\
place python scripts in this directory. (index.py and items.py)\
\
change your mongo db info (ip_address) in index.py and items.py scripts respectively.\
\
Once index.py and items.py scripts are in their directory, you can now setup a cronjob to execute this script every 5 minutes.\
\
use the following commands to setup a cronjob.\
\
export EDITOR=\'93YOUR_FAVORITE_EDITOR \'94 such as vim nano etc.\
crontab -e\
\
*/4 * * * *	/var/lib/elasticsearch/data/indexing/index.py -s < skip number documents> -l <limit number of documents> -u < users collection>\
*/8 * * * *	/var/lib/elasticsearch/data/indexing/items.py -s < skip number documents> -l <limit number of documents> -i < item collection>\
\
if we run index.py script without any arguments it will only create mappings.}